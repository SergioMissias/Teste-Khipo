unit Model.LoginSenha;

interface

uses
  Model.Connection,FireDAC.Comp.Client,
  Horse, System.JSON, System.SysUtils,
  Data.DB, DataSet.Serialize;


  type

  TClasseLoginSenha = Class

  private

      fSenha  :string;
      fUsuario:string;
      fNivel  :integer;
      fEmail:string;
      fidEmpresa:integer;
      tpMensagem :(tpErroSenha,tpErroUsuario,tpErroOperador);
      tpOperador:(tpPrestador,tpCliente);
  public
    procedure Usuario(Value:string) ;
    procedure Senha(Value:string)   ;
    procedure Nivel(Value:Integer)  ;
    procedure IdEmpresa(value:integer);
    procedure Email(value:string);
    function AcharLoginSenha(out ores:string) : TFDQuery;


  constructor Create;
  destructor Destroy;override;


  End;



implementation


{ TClasseLoginSenha }

{function TClasseLoginSenha.AcharLoginSenha(fNome, fSenha: string ; fcaso:integer): string;

{ TClasseLoginSenha }

function TClasseLoginSenha.AcharLoginSenha(out ores:string):TFDQuery;
var

uQrDinamica: TFDQuery;
begin
  uQrDinamica:=TFDQuery.Create(nil);
  uQrDinamica.Connection:=Model.Connection.FConnection;
  uQrDinamica.close;
  with uQrDinamica do
  begin
    sql.Clear;
    SQL.Add('SELECT * FROM USUARIOS WHERE NOME =:ONOME');
    sql.Add(' and IdEmpresa=:idemp ');
    Params.ParamByName('idemp').AsInteger:=fidEmpresa;
    Params.ParamByName('ONOME').AsString:=fUsuario;
  end;
  uQrDinamica.Open;
//  ores:=inttostr(uQrDinamica.FieldByName('idusuario').AsInteger);//  '0';
  if uQrDinamica.Eof=false then
  begin
   if uQrDinamica.FieldByName('Senha').AsString = fsenha then
   begin
     ores:=inttostr(uQrDinamica.FieldByName('idUsuario').asinteger);
     if uQrDinamica.FieldByName('Nivel').asinteger < fNivel then
     begin
       ores:='-3';
      end;
   end
   else
   begin
     ores:='-1';
   end;
  end
    else
    begin
      ores:='-2';
      result:=nil;
    end;
  result:=uQrDinamica;
end;

constructor TClasseLoginSenha.Create;
begin
      Model.Connection.Connect;
end;

destructor TClasseLoginSenha.Destroy;
begin
         Model.Connection.Disconect;
  inherited;
end;

procedure TClasseLoginSenha.Email(value: string);
begin
fEmail:=value;
end;

procedure TClasseLoginSenha.IdEmpresa(value: integer);
begin

fidEmpresa:=value;
end;




procedure TClasseLoginSenha.Nivel(Value: Integer) ;
begin

fNivel:=Value;
end;

procedure TClasseLoginSenha.Senha(Value: string) ;
begin

fSenha:=Value;

end;

procedure TClasseLoginSenha.Usuario(Value: string) ;
begin

fUsuario:=value;


end;


end.
